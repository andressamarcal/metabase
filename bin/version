#!/usr/bin/env bash

set euo -pipefail

BRANCH=$(git rev-parse --abbrev-ref HEAD)

# if this commit *is* a tagged commit, $TAG and $TAG_WITH_HASH will both be the same e.g. v0.32.5
TAG=$(git describe --tags --abbrev=0) # e.g. v0.32.5
TAG_WITH_HASH=$(git describe --tags)  # e.g. v0.32.5-935-gbddd76f97

# for tagged commits: VERSION=TAG e.g. VERSION=v0.32.5
if [[ ${TAG} = ${TAG_WITH_HASH} ]]; then
    VERSION=${TAG}
# for commits on a release branch new tag is the previous tag with point release bumped + -snapshot, e.g. v0.32.5 -> v0.32.6-snapshot
elif [[ ${BRANCH} =~ 'release' ]]; then
    VERSION=$(echo ${TAG} | perl -pe 's/(^v\d+\.\d+\.)(\d+)(.*$)/$1.($2+1).$3."-snapshot"/e')
# for all other commits new tag is the next major release -snapshot, e.g. v0.32.5 -> v0.33.0-snapshot
else
    VERSION=$(echo ${TAG} | perl -pe 's/(^v\d+\.)(\d+).*$/$1.($2+1).".0-snapshot"/e')
fi

# first 7 letters of hash should be enough; that's what GitHub uses
HASH=$(git show-ref --head --hash=7 head)

DATE=$(git log -1 --pretty=%ad --date=short)


# Return the version string used to describe this version of Metabase.
echo "$VERSION $HASH $BRANCH $DATE"
